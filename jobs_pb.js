// source: jobs.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var items_pb = require('./items_pb.js');
goog.object.extend(proto, items_pb);
goog.exportSymbol('proto.od2_network.hive.Assignment', null, global);
goog.exportSymbol('proto.od2_network.hive.AssignmentBatch', null, global);
goog.exportSymbol('proto.od2_network.hive.AssignmentReport', null, global);
goog.exportSymbol('proto.od2_network.hive.AssignmentResult', null, global);
goog.exportSymbol('proto.od2_network.hive.CloseAssignmentsStreamRequest', null, global);
goog.exportSymbol('proto.od2_network.hive.CloseAssignmentsStreamResponse', null, global);
goog.exportSymbol('proto.od2_network.hive.GetPendingAssignmentsCountRequest', null, global);
goog.exportSymbol('proto.od2_network.hive.KafkaPointer', null, global);
goog.exportSymbol('proto.od2_network.hive.OpenAssignmentsStreamRequest', null, global);
goog.exportSymbol('proto.od2_network.hive.OpenAssignmentsStreamResponse', null, global);
goog.exportSymbol('proto.od2_network.hive.PendingAssignmentsCount', null, global);
goog.exportSymbol('proto.od2_network.hive.ReportAssignmentsRequest', null, global);
goog.exportSymbol('proto.od2_network.hive.ReportAssignmentsResponse', null, global);
goog.exportSymbol('proto.od2_network.hive.StreamAssignmentsRequest', null, global);
goog.exportSymbol('proto.od2_network.hive.SurrenderAssignmentsRequest', null, global);
goog.exportSymbol('proto.od2_network.hive.SurrenderAssignmentsResponse', null, global);
goog.exportSymbol('proto.od2_network.hive.TaskStatus', null, global);
goog.exportSymbol('proto.od2_network.hive.WantAssignmentsRequest', null, global);
goog.exportSymbol('proto.od2_network.hive.WantAssignmentsResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.od2_network.hive.OpenAssignmentsStreamRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.od2_network.hive.OpenAssignmentsStreamRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.od2_network.hive.OpenAssignmentsStreamRequest.displayName = 'proto.od2_network.hive.OpenAssignmentsStreamRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.od2_network.hive.OpenAssignmentsStreamResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.od2_network.hive.OpenAssignmentsStreamResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.od2_network.hive.OpenAssignmentsStreamResponse.displayName = 'proto.od2_network.hive.OpenAssignmentsStreamResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.od2_network.hive.CloseAssignmentsStreamRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.od2_network.hive.CloseAssignmentsStreamRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.od2_network.hive.CloseAssignmentsStreamRequest.displayName = 'proto.od2_network.hive.CloseAssignmentsStreamRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.od2_network.hive.CloseAssignmentsStreamResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.od2_network.hive.CloseAssignmentsStreamResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.od2_network.hive.CloseAssignmentsStreamResponse.displayName = 'proto.od2_network.hive.CloseAssignmentsStreamResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.od2_network.hive.WantAssignmentsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.od2_network.hive.WantAssignmentsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.od2_network.hive.WantAssignmentsRequest.displayName = 'proto.od2_network.hive.WantAssignmentsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.od2_network.hive.WantAssignmentsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.od2_network.hive.WantAssignmentsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.od2_network.hive.WantAssignmentsResponse.displayName = 'proto.od2_network.hive.WantAssignmentsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.od2_network.hive.SurrenderAssignmentsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.od2_network.hive.SurrenderAssignmentsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.od2_network.hive.SurrenderAssignmentsRequest.displayName = 'proto.od2_network.hive.SurrenderAssignmentsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.od2_network.hive.SurrenderAssignmentsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.od2_network.hive.SurrenderAssignmentsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.od2_network.hive.SurrenderAssignmentsResponse.displayName = 'proto.od2_network.hive.SurrenderAssignmentsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.od2_network.hive.StreamAssignmentsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.od2_network.hive.StreamAssignmentsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.od2_network.hive.StreamAssignmentsRequest.displayName = 'proto.od2_network.hive.StreamAssignmentsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.od2_network.hive.GetPendingAssignmentsCountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.od2_network.hive.GetPendingAssignmentsCountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.od2_network.hive.GetPendingAssignmentsCountRequest.displayName = 'proto.od2_network.hive.GetPendingAssignmentsCountRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.od2_network.hive.PendingAssignmentsCount = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.od2_network.hive.PendingAssignmentsCount, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.od2_network.hive.PendingAssignmentsCount.displayName = 'proto.od2_network.hive.PendingAssignmentsCount';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.od2_network.hive.AssignmentBatch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.od2_network.hive.AssignmentBatch.repeatedFields_, null);
};
goog.inherits(proto.od2_network.hive.AssignmentBatch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.od2_network.hive.AssignmentBatch.displayName = 'proto.od2_network.hive.AssignmentBatch';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.od2_network.hive.KafkaPointer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.od2_network.hive.KafkaPointer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.od2_network.hive.KafkaPointer.displayName = 'proto.od2_network.hive.KafkaPointer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.od2_network.hive.Assignment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.od2_network.hive.Assignment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.od2_network.hive.Assignment.displayName = 'proto.od2_network.hive.Assignment';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.od2_network.hive.ReportAssignmentsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.od2_network.hive.ReportAssignmentsRequest.repeatedFields_, null);
};
goog.inherits(proto.od2_network.hive.ReportAssignmentsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.od2_network.hive.ReportAssignmentsRequest.displayName = 'proto.od2_network.hive.ReportAssignmentsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.od2_network.hive.AssignmentReport = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.od2_network.hive.AssignmentReport, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.od2_network.hive.AssignmentReport.displayName = 'proto.od2_network.hive.AssignmentReport';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.od2_network.hive.AssignmentResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.od2_network.hive.AssignmentResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.od2_network.hive.AssignmentResult.displayName = 'proto.od2_network.hive.AssignmentResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.od2_network.hive.ReportAssignmentsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.od2_network.hive.ReportAssignmentsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.od2_network.hive.ReportAssignmentsResponse.displayName = 'proto.od2_network.hive.ReportAssignmentsResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.od2_network.hive.OpenAssignmentsStreamRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.od2_network.hive.OpenAssignmentsStreamRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.od2_network.hive.OpenAssignmentsStreamRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.OpenAssignmentsStreamRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    collection: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.od2_network.hive.OpenAssignmentsStreamRequest}
 */
proto.od2_network.hive.OpenAssignmentsStreamRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.od2_network.hive.OpenAssignmentsStreamRequest;
  return proto.od2_network.hive.OpenAssignmentsStreamRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.od2_network.hive.OpenAssignmentsStreamRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.od2_network.hive.OpenAssignmentsStreamRequest}
 */
proto.od2_network.hive.OpenAssignmentsStreamRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.od2_network.hive.OpenAssignmentsStreamRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.od2_network.hive.OpenAssignmentsStreamRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.od2_network.hive.OpenAssignmentsStreamRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.OpenAssignmentsStreamRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string collection = 1;
 * @return {string}
 */
proto.od2_network.hive.OpenAssignmentsStreamRequest.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.od2_network.hive.OpenAssignmentsStreamRequest} returns this
 */
proto.od2_network.hive.OpenAssignmentsStreamRequest.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.od2_network.hive.OpenAssignmentsStreamResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.od2_network.hive.OpenAssignmentsStreamResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.od2_network.hive.OpenAssignmentsStreamResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.OpenAssignmentsStreamResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    streamId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.od2_network.hive.OpenAssignmentsStreamResponse}
 */
proto.od2_network.hive.OpenAssignmentsStreamResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.od2_network.hive.OpenAssignmentsStreamResponse;
  return proto.od2_network.hive.OpenAssignmentsStreamResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.od2_network.hive.OpenAssignmentsStreamResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.od2_network.hive.OpenAssignmentsStreamResponse}
 */
proto.od2_network.hive.OpenAssignmentsStreamResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStreamId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.od2_network.hive.OpenAssignmentsStreamResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.od2_network.hive.OpenAssignmentsStreamResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.od2_network.hive.OpenAssignmentsStreamResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.OpenAssignmentsStreamResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStreamId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 stream_id = 1;
 * @return {number}
 */
proto.od2_network.hive.OpenAssignmentsStreamResponse.prototype.getStreamId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.od2_network.hive.OpenAssignmentsStreamResponse} returns this
 */
proto.od2_network.hive.OpenAssignmentsStreamResponse.prototype.setStreamId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.od2_network.hive.CloseAssignmentsStreamRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.od2_network.hive.CloseAssignmentsStreamRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.od2_network.hive.CloseAssignmentsStreamRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.CloseAssignmentsStreamRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    streamId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    collection: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.od2_network.hive.CloseAssignmentsStreamRequest}
 */
proto.od2_network.hive.CloseAssignmentsStreamRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.od2_network.hive.CloseAssignmentsStreamRequest;
  return proto.od2_network.hive.CloseAssignmentsStreamRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.od2_network.hive.CloseAssignmentsStreamRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.od2_network.hive.CloseAssignmentsStreamRequest}
 */
proto.od2_network.hive.CloseAssignmentsStreamRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStreamId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.od2_network.hive.CloseAssignmentsStreamRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.od2_network.hive.CloseAssignmentsStreamRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.od2_network.hive.CloseAssignmentsStreamRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.CloseAssignmentsStreamRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStreamId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int64 stream_id = 1;
 * @return {number}
 */
proto.od2_network.hive.CloseAssignmentsStreamRequest.prototype.getStreamId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.od2_network.hive.CloseAssignmentsStreamRequest} returns this
 */
proto.od2_network.hive.CloseAssignmentsStreamRequest.prototype.setStreamId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string collection = 2;
 * @return {string}
 */
proto.od2_network.hive.CloseAssignmentsStreamRequest.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.od2_network.hive.CloseAssignmentsStreamRequest} returns this
 */
proto.od2_network.hive.CloseAssignmentsStreamRequest.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.od2_network.hive.CloseAssignmentsStreamResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.od2_network.hive.CloseAssignmentsStreamResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.od2_network.hive.CloseAssignmentsStreamResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.CloseAssignmentsStreamResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.od2_network.hive.CloseAssignmentsStreamResponse}
 */
proto.od2_network.hive.CloseAssignmentsStreamResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.od2_network.hive.CloseAssignmentsStreamResponse;
  return proto.od2_network.hive.CloseAssignmentsStreamResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.od2_network.hive.CloseAssignmentsStreamResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.od2_network.hive.CloseAssignmentsStreamResponse}
 */
proto.od2_network.hive.CloseAssignmentsStreamResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.od2_network.hive.CloseAssignmentsStreamResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.od2_network.hive.CloseAssignmentsStreamResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.od2_network.hive.CloseAssignmentsStreamResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.CloseAssignmentsStreamResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.od2_network.hive.WantAssignmentsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.od2_network.hive.WantAssignmentsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.od2_network.hive.WantAssignmentsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.WantAssignmentsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    streamId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    addWatermark: jspb.Message.getFieldWithDefault(msg, 2, 0),
    collection: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.od2_network.hive.WantAssignmentsRequest}
 */
proto.od2_network.hive.WantAssignmentsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.od2_network.hive.WantAssignmentsRequest;
  return proto.od2_network.hive.WantAssignmentsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.od2_network.hive.WantAssignmentsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.od2_network.hive.WantAssignmentsRequest}
 */
proto.od2_network.hive.WantAssignmentsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStreamId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAddWatermark(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.od2_network.hive.WantAssignmentsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.od2_network.hive.WantAssignmentsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.od2_network.hive.WantAssignmentsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.WantAssignmentsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStreamId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getAddWatermark();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int64 stream_id = 1;
 * @return {number}
 */
proto.od2_network.hive.WantAssignmentsRequest.prototype.getStreamId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.od2_network.hive.WantAssignmentsRequest} returns this
 */
proto.od2_network.hive.WantAssignmentsRequest.prototype.setStreamId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 add_watermark = 2;
 * @return {number}
 */
proto.od2_network.hive.WantAssignmentsRequest.prototype.getAddWatermark = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.od2_network.hive.WantAssignmentsRequest} returns this
 */
proto.od2_network.hive.WantAssignmentsRequest.prototype.setAddWatermark = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string collection = 3;
 * @return {string}
 */
proto.od2_network.hive.WantAssignmentsRequest.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.od2_network.hive.WantAssignmentsRequest} returns this
 */
proto.od2_network.hive.WantAssignmentsRequest.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.od2_network.hive.WantAssignmentsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.od2_network.hive.WantAssignmentsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.od2_network.hive.WantAssignmentsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.WantAssignmentsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    addedWatermark: jspb.Message.getFieldWithDefault(msg, 1, 0),
    watermark: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.od2_network.hive.WantAssignmentsResponse}
 */
proto.od2_network.hive.WantAssignmentsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.od2_network.hive.WantAssignmentsResponse;
  return proto.od2_network.hive.WantAssignmentsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.od2_network.hive.WantAssignmentsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.od2_network.hive.WantAssignmentsResponse}
 */
proto.od2_network.hive.WantAssignmentsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAddedWatermark(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWatermark(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.od2_network.hive.WantAssignmentsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.od2_network.hive.WantAssignmentsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.od2_network.hive.WantAssignmentsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.WantAssignmentsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddedWatermark();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getWatermark();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 added_watermark = 1;
 * @return {number}
 */
proto.od2_network.hive.WantAssignmentsResponse.prototype.getAddedWatermark = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.od2_network.hive.WantAssignmentsResponse} returns this
 */
proto.od2_network.hive.WantAssignmentsResponse.prototype.setAddedWatermark = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 watermark = 2;
 * @return {number}
 */
proto.od2_network.hive.WantAssignmentsResponse.prototype.getWatermark = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.od2_network.hive.WantAssignmentsResponse} returns this
 */
proto.od2_network.hive.WantAssignmentsResponse.prototype.setWatermark = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.od2_network.hive.SurrenderAssignmentsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.od2_network.hive.SurrenderAssignmentsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.od2_network.hive.SurrenderAssignmentsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.SurrenderAssignmentsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    streamId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    collection: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.od2_network.hive.SurrenderAssignmentsRequest}
 */
proto.od2_network.hive.SurrenderAssignmentsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.od2_network.hive.SurrenderAssignmentsRequest;
  return proto.od2_network.hive.SurrenderAssignmentsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.od2_network.hive.SurrenderAssignmentsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.od2_network.hive.SurrenderAssignmentsRequest}
 */
proto.od2_network.hive.SurrenderAssignmentsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStreamId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.od2_network.hive.SurrenderAssignmentsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.od2_network.hive.SurrenderAssignmentsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.od2_network.hive.SurrenderAssignmentsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.SurrenderAssignmentsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStreamId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int64 stream_id = 1;
 * @return {number}
 */
proto.od2_network.hive.SurrenderAssignmentsRequest.prototype.getStreamId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.od2_network.hive.SurrenderAssignmentsRequest} returns this
 */
proto.od2_network.hive.SurrenderAssignmentsRequest.prototype.setStreamId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string collection = 2;
 * @return {string}
 */
proto.od2_network.hive.SurrenderAssignmentsRequest.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.od2_network.hive.SurrenderAssignmentsRequest} returns this
 */
proto.od2_network.hive.SurrenderAssignmentsRequest.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.od2_network.hive.SurrenderAssignmentsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.od2_network.hive.SurrenderAssignmentsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.od2_network.hive.SurrenderAssignmentsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.SurrenderAssignmentsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    removedWatermark: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.od2_network.hive.SurrenderAssignmentsResponse}
 */
proto.od2_network.hive.SurrenderAssignmentsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.od2_network.hive.SurrenderAssignmentsResponse;
  return proto.od2_network.hive.SurrenderAssignmentsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.od2_network.hive.SurrenderAssignmentsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.od2_network.hive.SurrenderAssignmentsResponse}
 */
proto.od2_network.hive.SurrenderAssignmentsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRemovedWatermark(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.od2_network.hive.SurrenderAssignmentsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.od2_network.hive.SurrenderAssignmentsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.od2_network.hive.SurrenderAssignmentsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.SurrenderAssignmentsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRemovedWatermark();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 removed_watermark = 1;
 * @return {number}
 */
proto.od2_network.hive.SurrenderAssignmentsResponse.prototype.getRemovedWatermark = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.od2_network.hive.SurrenderAssignmentsResponse} returns this
 */
proto.od2_network.hive.SurrenderAssignmentsResponse.prototype.setRemovedWatermark = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.od2_network.hive.StreamAssignmentsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.od2_network.hive.StreamAssignmentsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.od2_network.hive.StreamAssignmentsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.StreamAssignmentsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    streamId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    collection: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.od2_network.hive.StreamAssignmentsRequest}
 */
proto.od2_network.hive.StreamAssignmentsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.od2_network.hive.StreamAssignmentsRequest;
  return proto.od2_network.hive.StreamAssignmentsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.od2_network.hive.StreamAssignmentsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.od2_network.hive.StreamAssignmentsRequest}
 */
proto.od2_network.hive.StreamAssignmentsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStreamId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.od2_network.hive.StreamAssignmentsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.od2_network.hive.StreamAssignmentsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.od2_network.hive.StreamAssignmentsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.StreamAssignmentsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStreamId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int64 stream_id = 1;
 * @return {number}
 */
proto.od2_network.hive.StreamAssignmentsRequest.prototype.getStreamId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.od2_network.hive.StreamAssignmentsRequest} returns this
 */
proto.od2_network.hive.StreamAssignmentsRequest.prototype.setStreamId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string collection = 2;
 * @return {string}
 */
proto.od2_network.hive.StreamAssignmentsRequest.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.od2_network.hive.StreamAssignmentsRequest} returns this
 */
proto.od2_network.hive.StreamAssignmentsRequest.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.od2_network.hive.GetPendingAssignmentsCountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.od2_network.hive.GetPendingAssignmentsCountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.od2_network.hive.GetPendingAssignmentsCountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.GetPendingAssignmentsCountRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    streamId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    collection: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.od2_network.hive.GetPendingAssignmentsCountRequest}
 */
proto.od2_network.hive.GetPendingAssignmentsCountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.od2_network.hive.GetPendingAssignmentsCountRequest;
  return proto.od2_network.hive.GetPendingAssignmentsCountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.od2_network.hive.GetPendingAssignmentsCountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.od2_network.hive.GetPendingAssignmentsCountRequest}
 */
proto.od2_network.hive.GetPendingAssignmentsCountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStreamId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.od2_network.hive.GetPendingAssignmentsCountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.od2_network.hive.GetPendingAssignmentsCountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.od2_network.hive.GetPendingAssignmentsCountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.GetPendingAssignmentsCountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStreamId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int64 stream_id = 1;
 * @return {number}
 */
proto.od2_network.hive.GetPendingAssignmentsCountRequest.prototype.getStreamId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.od2_network.hive.GetPendingAssignmentsCountRequest} returns this
 */
proto.od2_network.hive.GetPendingAssignmentsCountRequest.prototype.setStreamId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string collection = 2;
 * @return {string}
 */
proto.od2_network.hive.GetPendingAssignmentsCountRequest.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.od2_network.hive.GetPendingAssignmentsCountRequest} returns this
 */
proto.od2_network.hive.GetPendingAssignmentsCountRequest.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.od2_network.hive.PendingAssignmentsCount.prototype.toObject = function(opt_includeInstance) {
  return proto.od2_network.hive.PendingAssignmentsCount.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.od2_network.hive.PendingAssignmentsCount} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.PendingAssignmentsCount.toObject = function(includeInstance, msg) {
  var f, obj = {
    watermark: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.od2_network.hive.PendingAssignmentsCount}
 */
proto.od2_network.hive.PendingAssignmentsCount.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.od2_network.hive.PendingAssignmentsCount;
  return proto.od2_network.hive.PendingAssignmentsCount.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.od2_network.hive.PendingAssignmentsCount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.od2_network.hive.PendingAssignmentsCount}
 */
proto.od2_network.hive.PendingAssignmentsCount.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWatermark(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.od2_network.hive.PendingAssignmentsCount.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.od2_network.hive.PendingAssignmentsCount.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.od2_network.hive.PendingAssignmentsCount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.PendingAssignmentsCount.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWatermark();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 watermark = 1;
 * @return {number}
 */
proto.od2_network.hive.PendingAssignmentsCount.prototype.getWatermark = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.od2_network.hive.PendingAssignmentsCount} returns this
 */
proto.od2_network.hive.PendingAssignmentsCount.prototype.setWatermark = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.od2_network.hive.AssignmentBatch.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.od2_network.hive.AssignmentBatch.prototype.toObject = function(opt_includeInstance) {
  return proto.od2_network.hive.AssignmentBatch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.od2_network.hive.AssignmentBatch} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.AssignmentBatch.toObject = function(includeInstance, msg) {
  var f, obj = {
    assignmentsList: jspb.Message.toObjectList(msg.getAssignmentsList(),
    proto.od2_network.hive.Assignment.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.od2_network.hive.AssignmentBatch}
 */
proto.od2_network.hive.AssignmentBatch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.od2_network.hive.AssignmentBatch;
  return proto.od2_network.hive.AssignmentBatch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.od2_network.hive.AssignmentBatch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.od2_network.hive.AssignmentBatch}
 */
proto.od2_network.hive.AssignmentBatch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.od2_network.hive.Assignment;
      reader.readMessage(value,proto.od2_network.hive.Assignment.deserializeBinaryFromReader);
      msg.addAssignments(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.od2_network.hive.AssignmentBatch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.od2_network.hive.AssignmentBatch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.od2_network.hive.AssignmentBatch} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.AssignmentBatch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAssignmentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.od2_network.hive.Assignment.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Assignment assignments = 1;
 * @return {!Array<!proto.od2_network.hive.Assignment>}
 */
proto.od2_network.hive.AssignmentBatch.prototype.getAssignmentsList = function() {
  return /** @type{!Array<!proto.od2_network.hive.Assignment>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.od2_network.hive.Assignment, 1));
};


/**
 * @param {!Array<!proto.od2_network.hive.Assignment>} value
 * @return {!proto.od2_network.hive.AssignmentBatch} returns this
*/
proto.od2_network.hive.AssignmentBatch.prototype.setAssignmentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.od2_network.hive.Assignment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.od2_network.hive.Assignment}
 */
proto.od2_network.hive.AssignmentBatch.prototype.addAssignments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.od2_network.hive.Assignment, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.od2_network.hive.AssignmentBatch} returns this
 */
proto.od2_network.hive.AssignmentBatch.prototype.clearAssignmentsList = function() {
  return this.setAssignmentsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.od2_network.hive.KafkaPointer.prototype.toObject = function(opt_includeInstance) {
  return proto.od2_network.hive.KafkaPointer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.od2_network.hive.KafkaPointer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.KafkaPointer.toObject = function(includeInstance, msg) {
  var f, obj = {
    partition: jspb.Message.getFieldWithDefault(msg, 1, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.od2_network.hive.KafkaPointer}
 */
proto.od2_network.hive.KafkaPointer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.od2_network.hive.KafkaPointer;
  return proto.od2_network.hive.KafkaPointer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.od2_network.hive.KafkaPointer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.od2_network.hive.KafkaPointer}
 */
proto.od2_network.hive.KafkaPointer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPartition(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOffset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.od2_network.hive.KafkaPointer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.od2_network.hive.KafkaPointer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.od2_network.hive.KafkaPointer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.KafkaPointer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPartition();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int32 partition = 1;
 * @return {number}
 */
proto.od2_network.hive.KafkaPointer.prototype.getPartition = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.od2_network.hive.KafkaPointer} returns this
 */
proto.od2_network.hive.KafkaPointer.prototype.setPartition = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 offset = 2;
 * @return {number}
 */
proto.od2_network.hive.KafkaPointer.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.od2_network.hive.KafkaPointer} returns this
 */
proto.od2_network.hive.KafkaPointer.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.od2_network.hive.Assignment.prototype.toObject = function(opt_includeInstance) {
  return proto.od2_network.hive.Assignment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.od2_network.hive.Assignment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.Assignment.toObject = function(includeInstance, msg) {
  var f, obj = {
    locator: (f = msg.getLocator()) && items_pb.ItemLocator.toObject(includeInstance, f),
    kafkaPointer: (f = msg.getKafkaPointer()) && proto.od2_network.hive.KafkaPointer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.od2_network.hive.Assignment}
 */
proto.od2_network.hive.Assignment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.od2_network.hive.Assignment;
  return proto.od2_network.hive.Assignment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.od2_network.hive.Assignment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.od2_network.hive.Assignment}
 */
proto.od2_network.hive.Assignment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new items_pb.ItemLocator;
      reader.readMessage(value,items_pb.ItemLocator.deserializeBinaryFromReader);
      msg.setLocator(value);
      break;
    case 2:
      var value = new proto.od2_network.hive.KafkaPointer;
      reader.readMessage(value,proto.od2_network.hive.KafkaPointer.deserializeBinaryFromReader);
      msg.setKafkaPointer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.od2_network.hive.Assignment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.od2_network.hive.Assignment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.od2_network.hive.Assignment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.Assignment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocator();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      items_pb.ItemLocator.serializeBinaryToWriter
    );
  }
  f = message.getKafkaPointer();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.od2_network.hive.KafkaPointer.serializeBinaryToWriter
    );
  }
};


/**
 * optional ItemLocator locator = 1;
 * @return {?proto.od2_network.hive.ItemLocator}
 */
proto.od2_network.hive.Assignment.prototype.getLocator = function() {
  return /** @type{?proto.od2_network.hive.ItemLocator} */ (
    jspb.Message.getWrapperField(this, items_pb.ItemLocator, 1));
};


/**
 * @param {?proto.od2_network.hive.ItemLocator|undefined} value
 * @return {!proto.od2_network.hive.Assignment} returns this
*/
proto.od2_network.hive.Assignment.prototype.setLocator = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.od2_network.hive.Assignment} returns this
 */
proto.od2_network.hive.Assignment.prototype.clearLocator = function() {
  return this.setLocator(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.od2_network.hive.Assignment.prototype.hasLocator = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional KafkaPointer kafka_pointer = 2;
 * @return {?proto.od2_network.hive.KafkaPointer}
 */
proto.od2_network.hive.Assignment.prototype.getKafkaPointer = function() {
  return /** @type{?proto.od2_network.hive.KafkaPointer} */ (
    jspb.Message.getWrapperField(this, proto.od2_network.hive.KafkaPointer, 2));
};


/**
 * @param {?proto.od2_network.hive.KafkaPointer|undefined} value
 * @return {!proto.od2_network.hive.Assignment} returns this
*/
proto.od2_network.hive.Assignment.prototype.setKafkaPointer = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.od2_network.hive.Assignment} returns this
 */
proto.od2_network.hive.Assignment.prototype.clearKafkaPointer = function() {
  return this.setKafkaPointer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.od2_network.hive.Assignment.prototype.hasKafkaPointer = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.od2_network.hive.ReportAssignmentsRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.od2_network.hive.ReportAssignmentsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.od2_network.hive.ReportAssignmentsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.od2_network.hive.ReportAssignmentsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.ReportAssignmentsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    reportsList: jspb.Message.toObjectList(msg.getReportsList(),
    proto.od2_network.hive.AssignmentReport.toObject, includeInstance),
    collection: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.od2_network.hive.ReportAssignmentsRequest}
 */
proto.od2_network.hive.ReportAssignmentsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.od2_network.hive.ReportAssignmentsRequest;
  return proto.od2_network.hive.ReportAssignmentsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.od2_network.hive.ReportAssignmentsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.od2_network.hive.ReportAssignmentsRequest}
 */
proto.od2_network.hive.ReportAssignmentsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.od2_network.hive.AssignmentReport;
      reader.readMessage(value,proto.od2_network.hive.AssignmentReport.deserializeBinaryFromReader);
      msg.addReports(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.od2_network.hive.ReportAssignmentsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.od2_network.hive.ReportAssignmentsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.od2_network.hive.ReportAssignmentsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.ReportAssignmentsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReportsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.od2_network.hive.AssignmentReport.serializeBinaryToWriter
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated AssignmentReport reports = 1;
 * @return {!Array<!proto.od2_network.hive.AssignmentReport>}
 */
proto.od2_network.hive.ReportAssignmentsRequest.prototype.getReportsList = function() {
  return /** @type{!Array<!proto.od2_network.hive.AssignmentReport>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.od2_network.hive.AssignmentReport, 1));
};


/**
 * @param {!Array<!proto.od2_network.hive.AssignmentReport>} value
 * @return {!proto.od2_network.hive.ReportAssignmentsRequest} returns this
*/
proto.od2_network.hive.ReportAssignmentsRequest.prototype.setReportsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.od2_network.hive.AssignmentReport=} opt_value
 * @param {number=} opt_index
 * @return {!proto.od2_network.hive.AssignmentReport}
 */
proto.od2_network.hive.ReportAssignmentsRequest.prototype.addReports = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.od2_network.hive.AssignmentReport, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.od2_network.hive.ReportAssignmentsRequest} returns this
 */
proto.od2_network.hive.ReportAssignmentsRequest.prototype.clearReportsList = function() {
  return this.setReportsList([]);
};


/**
 * optional string collection = 2;
 * @return {string}
 */
proto.od2_network.hive.ReportAssignmentsRequest.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.od2_network.hive.ReportAssignmentsRequest} returns this
 */
proto.od2_network.hive.ReportAssignmentsRequest.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.od2_network.hive.AssignmentReport.prototype.toObject = function(opt_includeInstance) {
  return proto.od2_network.hive.AssignmentReport.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.od2_network.hive.AssignmentReport} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.AssignmentReport.toObject = function(includeInstance, msg) {
  var f, obj = {
    kafkaPointer: (f = msg.getKafkaPointer()) && proto.od2_network.hive.KafkaPointer.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.od2_network.hive.AssignmentReport}
 */
proto.od2_network.hive.AssignmentReport.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.od2_network.hive.AssignmentReport;
  return proto.od2_network.hive.AssignmentReport.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.od2_network.hive.AssignmentReport} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.od2_network.hive.AssignmentReport}
 */
proto.od2_network.hive.AssignmentReport.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.od2_network.hive.KafkaPointer;
      reader.readMessage(value,proto.od2_network.hive.KafkaPointer.deserializeBinaryFromReader);
      msg.setKafkaPointer(value);
      break;
    case 2:
      var value = /** @type {!proto.od2_network.hive.TaskStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.od2_network.hive.AssignmentReport.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.od2_network.hive.AssignmentReport.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.od2_network.hive.AssignmentReport} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.AssignmentReport.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKafkaPointer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.od2_network.hive.KafkaPointer.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional KafkaPointer kafka_pointer = 1;
 * @return {?proto.od2_network.hive.KafkaPointer}
 */
proto.od2_network.hive.AssignmentReport.prototype.getKafkaPointer = function() {
  return /** @type{?proto.od2_network.hive.KafkaPointer} */ (
    jspb.Message.getWrapperField(this, proto.od2_network.hive.KafkaPointer, 1));
};


/**
 * @param {?proto.od2_network.hive.KafkaPointer|undefined} value
 * @return {!proto.od2_network.hive.AssignmentReport} returns this
*/
proto.od2_network.hive.AssignmentReport.prototype.setKafkaPointer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.od2_network.hive.AssignmentReport} returns this
 */
proto.od2_network.hive.AssignmentReport.prototype.clearKafkaPointer = function() {
  return this.setKafkaPointer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.od2_network.hive.AssignmentReport.prototype.hasKafkaPointer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TaskStatus status = 2;
 * @return {!proto.od2_network.hive.TaskStatus}
 */
proto.od2_network.hive.AssignmentReport.prototype.getStatus = function() {
  return /** @type {!proto.od2_network.hive.TaskStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.od2_network.hive.TaskStatus} value
 * @return {!proto.od2_network.hive.AssignmentReport} returns this
 */
proto.od2_network.hive.AssignmentReport.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.od2_network.hive.AssignmentResult.prototype.toObject = function(opt_includeInstance) {
  return proto.od2_network.hive.AssignmentResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.od2_network.hive.AssignmentResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.AssignmentResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    workerId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    report: (f = msg.getReport()) && proto.od2_network.hive.AssignmentReport.toObject(includeInstance, f),
    finishTime: (f = msg.getFinishTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    locator: (f = msg.getLocator()) && items_pb.ItemLocator.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.od2_network.hive.AssignmentResult}
 */
proto.od2_network.hive.AssignmentResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.od2_network.hive.AssignmentResult;
  return proto.od2_network.hive.AssignmentResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.od2_network.hive.AssignmentResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.od2_network.hive.AssignmentResult}
 */
proto.od2_network.hive.AssignmentResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setWorkerId(value);
      break;
    case 2:
      var value = new proto.od2_network.hive.AssignmentReport;
      reader.readMessage(value,proto.od2_network.hive.AssignmentReport.deserializeBinaryFromReader);
      msg.setReport(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setFinishTime(value);
      break;
    case 4:
      var value = new items_pb.ItemLocator;
      reader.readMessage(value,items_pb.ItemLocator.deserializeBinaryFromReader);
      msg.setLocator(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.od2_network.hive.AssignmentResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.od2_network.hive.AssignmentResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.od2_network.hive.AssignmentResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.AssignmentResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWorkerId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getReport();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.od2_network.hive.AssignmentReport.serializeBinaryToWriter
    );
  }
  f = message.getFinishTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLocator();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      items_pb.ItemLocator.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 worker_id = 1;
 * @return {number}
 */
proto.od2_network.hive.AssignmentResult.prototype.getWorkerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.od2_network.hive.AssignmentResult} returns this
 */
proto.od2_network.hive.AssignmentResult.prototype.setWorkerId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional AssignmentReport report = 2;
 * @return {?proto.od2_network.hive.AssignmentReport}
 */
proto.od2_network.hive.AssignmentResult.prototype.getReport = function() {
  return /** @type{?proto.od2_network.hive.AssignmentReport} */ (
    jspb.Message.getWrapperField(this, proto.od2_network.hive.AssignmentReport, 2));
};


/**
 * @param {?proto.od2_network.hive.AssignmentReport|undefined} value
 * @return {!proto.od2_network.hive.AssignmentResult} returns this
*/
proto.od2_network.hive.AssignmentResult.prototype.setReport = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.od2_network.hive.AssignmentResult} returns this
 */
proto.od2_network.hive.AssignmentResult.prototype.clearReport = function() {
  return this.setReport(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.od2_network.hive.AssignmentResult.prototype.hasReport = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp finish_time = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.od2_network.hive.AssignmentResult.prototype.getFinishTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.od2_network.hive.AssignmentResult} returns this
*/
proto.od2_network.hive.AssignmentResult.prototype.setFinishTime = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.od2_network.hive.AssignmentResult} returns this
 */
proto.od2_network.hive.AssignmentResult.prototype.clearFinishTime = function() {
  return this.setFinishTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.od2_network.hive.AssignmentResult.prototype.hasFinishTime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ItemLocator locator = 4;
 * @return {?proto.od2_network.hive.ItemLocator}
 */
proto.od2_network.hive.AssignmentResult.prototype.getLocator = function() {
  return /** @type{?proto.od2_network.hive.ItemLocator} */ (
    jspb.Message.getWrapperField(this, items_pb.ItemLocator, 4));
};


/**
 * @param {?proto.od2_network.hive.ItemLocator|undefined} value
 * @return {!proto.od2_network.hive.AssignmentResult} returns this
*/
proto.od2_network.hive.AssignmentResult.prototype.setLocator = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.od2_network.hive.AssignmentResult} returns this
 */
proto.od2_network.hive.AssignmentResult.prototype.clearLocator = function() {
  return this.setLocator(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.od2_network.hive.AssignmentResult.prototype.hasLocator = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.od2_network.hive.ReportAssignmentsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.od2_network.hive.ReportAssignmentsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.od2_network.hive.ReportAssignmentsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.ReportAssignmentsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    acknowledged: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.od2_network.hive.ReportAssignmentsResponse}
 */
proto.od2_network.hive.ReportAssignmentsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.od2_network.hive.ReportAssignmentsResponse;
  return proto.od2_network.hive.ReportAssignmentsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.od2_network.hive.ReportAssignmentsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.od2_network.hive.ReportAssignmentsResponse}
 */
proto.od2_network.hive.ReportAssignmentsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAcknowledged(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.od2_network.hive.ReportAssignmentsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.od2_network.hive.ReportAssignmentsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.od2_network.hive.ReportAssignmentsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.ReportAssignmentsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAcknowledged();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 acknowledged = 1;
 * @return {number}
 */
proto.od2_network.hive.ReportAssignmentsResponse.prototype.getAcknowledged = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.od2_network.hive.ReportAssignmentsResponse} returns this
 */
proto.od2_network.hive.ReportAssignmentsResponse.prototype.setAcknowledged = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * @enum {number}
 */
proto.od2_network.hive.TaskStatus = {
  SUCCESS: 0,
  CLIENT_FAILURE: 1,
  TIMEOUT: 2
};

goog.object.extend(exports, proto.od2_network.hive);
