// source: hive-api/items.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.od2_network.hive.Assignment', null, global);
goog.exportSymbol('proto.od2_network.hive.AssignmentReport', null, global);
goog.exportSymbol('proto.od2_network.hive.AssignmentResult', null, global);
goog.exportSymbol('proto.od2_network.hive.ItemLocator', null, global);
goog.exportSymbol('proto.od2_network.hive.ItemPointer', null, global);
goog.exportSymbol('proto.od2_network.hive.KafkaPointer', null, global);
goog.exportSymbol('proto.od2_network.hive.TaskStatus', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.od2_network.hive.ItemLocator = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.od2_network.hive.ItemLocator, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.od2_network.hive.ItemLocator.displayName = 'proto.od2_network.hive.ItemLocator';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.od2_network.hive.ItemPointer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.od2_network.hive.ItemPointer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.od2_network.hive.ItemPointer.displayName = 'proto.od2_network.hive.ItemPointer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.od2_network.hive.KafkaPointer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.od2_network.hive.KafkaPointer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.od2_network.hive.KafkaPointer.displayName = 'proto.od2_network.hive.KafkaPointer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.od2_network.hive.Assignment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.od2_network.hive.Assignment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.od2_network.hive.Assignment.displayName = 'proto.od2_network.hive.Assignment';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.od2_network.hive.AssignmentReport = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.od2_network.hive.AssignmentReport, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.od2_network.hive.AssignmentReport.displayName = 'proto.od2_network.hive.AssignmentReport';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.od2_network.hive.AssignmentResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.od2_network.hive.AssignmentResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.od2_network.hive.AssignmentResult.displayName = 'proto.od2_network.hive.AssignmentResult';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.od2_network.hive.ItemLocator.prototype.toObject = function(opt_includeInstance) {
  return proto.od2_network.hive.ItemLocator.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.od2_network.hive.ItemLocator} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.ItemLocator.toObject = function(includeInstance, msg) {
  var f, obj = {
    collection: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.od2_network.hive.ItemLocator}
 */
proto.od2_network.hive.ItemLocator.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.od2_network.hive.ItemLocator;
  return proto.od2_network.hive.ItemLocator.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.od2_network.hive.ItemLocator} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.od2_network.hive.ItemLocator}
 */
proto.od2_network.hive.ItemLocator.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.od2_network.hive.ItemLocator.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.od2_network.hive.ItemLocator.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.od2_network.hive.ItemLocator} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.ItemLocator.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string collection = 1;
 * @return {string}
 */
proto.od2_network.hive.ItemLocator.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.od2_network.hive.ItemLocator} returns this
 */
proto.od2_network.hive.ItemLocator.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.od2_network.hive.ItemLocator.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.od2_network.hive.ItemLocator} returns this
 */
proto.od2_network.hive.ItemLocator.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.od2_network.hive.ItemPointer.prototype.toObject = function(opt_includeInstance) {
  return proto.od2_network.hive.ItemPointer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.od2_network.hive.ItemPointer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.ItemPointer.toObject = function(includeInstance, msg) {
  var f, obj = {
    dst: (f = msg.getDst()) && proto.od2_network.hive.ItemLocator.toObject(includeInstance, f),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.od2_network.hive.ItemPointer}
 */
proto.od2_network.hive.ItemPointer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.od2_network.hive.ItemPointer;
  return proto.od2_network.hive.ItemPointer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.od2_network.hive.ItemPointer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.od2_network.hive.ItemPointer}
 */
proto.od2_network.hive.ItemPointer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.od2_network.hive.ItemLocator;
      reader.readMessage(value,proto.od2_network.hive.ItemLocator.deserializeBinaryFromReader);
      msg.setDst(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.od2_network.hive.ItemPointer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.od2_network.hive.ItemPointer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.od2_network.hive.ItemPointer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.ItemPointer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDst();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.od2_network.hive.ItemLocator.serializeBinaryToWriter
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional ItemLocator dst = 1;
 * @return {?proto.od2_network.hive.ItemLocator}
 */
proto.od2_network.hive.ItemPointer.prototype.getDst = function() {
  return /** @type{?proto.od2_network.hive.ItemLocator} */ (
    jspb.Message.getWrapperField(this, proto.od2_network.hive.ItemLocator, 1));
};


/**
 * @param {?proto.od2_network.hive.ItemLocator|undefined} value
 * @return {!proto.od2_network.hive.ItemPointer} returns this
*/
proto.od2_network.hive.ItemPointer.prototype.setDst = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.od2_network.hive.ItemPointer} returns this
 */
proto.od2_network.hive.ItemPointer.prototype.clearDst = function() {
  return this.setDst(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.od2_network.hive.ItemPointer.prototype.hasDst = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp timestamp = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.od2_network.hive.ItemPointer.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.od2_network.hive.ItemPointer} returns this
*/
proto.od2_network.hive.ItemPointer.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.od2_network.hive.ItemPointer} returns this
 */
proto.od2_network.hive.ItemPointer.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.od2_network.hive.ItemPointer.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.od2_network.hive.KafkaPointer.prototype.toObject = function(opt_includeInstance) {
  return proto.od2_network.hive.KafkaPointer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.od2_network.hive.KafkaPointer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.KafkaPointer.toObject = function(includeInstance, msg) {
  var f, obj = {
    partition: jspb.Message.getFieldWithDefault(msg, 1, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.od2_network.hive.KafkaPointer}
 */
proto.od2_network.hive.KafkaPointer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.od2_network.hive.KafkaPointer;
  return proto.od2_network.hive.KafkaPointer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.od2_network.hive.KafkaPointer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.od2_network.hive.KafkaPointer}
 */
proto.od2_network.hive.KafkaPointer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPartition(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOffset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.od2_network.hive.KafkaPointer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.od2_network.hive.KafkaPointer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.od2_network.hive.KafkaPointer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.KafkaPointer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPartition();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int32 partition = 1;
 * @return {number}
 */
proto.od2_network.hive.KafkaPointer.prototype.getPartition = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.od2_network.hive.KafkaPointer} returns this
 */
proto.od2_network.hive.KafkaPointer.prototype.setPartition = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 offset = 2;
 * @return {number}
 */
proto.od2_network.hive.KafkaPointer.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.od2_network.hive.KafkaPointer} returns this
 */
proto.od2_network.hive.KafkaPointer.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.od2_network.hive.Assignment.prototype.toObject = function(opt_includeInstance) {
  return proto.od2_network.hive.Assignment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.od2_network.hive.Assignment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.Assignment.toObject = function(includeInstance, msg) {
  var f, obj = {
    locator: (f = msg.getLocator()) && proto.od2_network.hive.ItemLocator.toObject(includeInstance, f),
    kafkaPointer: (f = msg.getKafkaPointer()) && proto.od2_network.hive.KafkaPointer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.od2_network.hive.Assignment}
 */
proto.od2_network.hive.Assignment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.od2_network.hive.Assignment;
  return proto.od2_network.hive.Assignment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.od2_network.hive.Assignment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.od2_network.hive.Assignment}
 */
proto.od2_network.hive.Assignment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.od2_network.hive.ItemLocator;
      reader.readMessage(value,proto.od2_network.hive.ItemLocator.deserializeBinaryFromReader);
      msg.setLocator(value);
      break;
    case 2:
      var value = new proto.od2_network.hive.KafkaPointer;
      reader.readMessage(value,proto.od2_network.hive.KafkaPointer.deserializeBinaryFromReader);
      msg.setKafkaPointer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.od2_network.hive.Assignment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.od2_network.hive.Assignment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.od2_network.hive.Assignment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.Assignment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocator();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.od2_network.hive.ItemLocator.serializeBinaryToWriter
    );
  }
  f = message.getKafkaPointer();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.od2_network.hive.KafkaPointer.serializeBinaryToWriter
    );
  }
};


/**
 * optional ItemLocator locator = 1;
 * @return {?proto.od2_network.hive.ItemLocator}
 */
proto.od2_network.hive.Assignment.prototype.getLocator = function() {
  return /** @type{?proto.od2_network.hive.ItemLocator} */ (
    jspb.Message.getWrapperField(this, proto.od2_network.hive.ItemLocator, 1));
};


/**
 * @param {?proto.od2_network.hive.ItemLocator|undefined} value
 * @return {!proto.od2_network.hive.Assignment} returns this
*/
proto.od2_network.hive.Assignment.prototype.setLocator = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.od2_network.hive.Assignment} returns this
 */
proto.od2_network.hive.Assignment.prototype.clearLocator = function() {
  return this.setLocator(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.od2_network.hive.Assignment.prototype.hasLocator = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional KafkaPointer kafka_pointer = 2;
 * @return {?proto.od2_network.hive.KafkaPointer}
 */
proto.od2_network.hive.Assignment.prototype.getKafkaPointer = function() {
  return /** @type{?proto.od2_network.hive.KafkaPointer} */ (
    jspb.Message.getWrapperField(this, proto.od2_network.hive.KafkaPointer, 2));
};


/**
 * @param {?proto.od2_network.hive.KafkaPointer|undefined} value
 * @return {!proto.od2_network.hive.Assignment} returns this
*/
proto.od2_network.hive.Assignment.prototype.setKafkaPointer = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.od2_network.hive.Assignment} returns this
 */
proto.od2_network.hive.Assignment.prototype.clearKafkaPointer = function() {
  return this.setKafkaPointer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.od2_network.hive.Assignment.prototype.hasKafkaPointer = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.od2_network.hive.AssignmentReport.prototype.toObject = function(opt_includeInstance) {
  return proto.od2_network.hive.AssignmentReport.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.od2_network.hive.AssignmentReport} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.AssignmentReport.toObject = function(includeInstance, msg) {
  var f, obj = {
    kafkaPointer: (f = msg.getKafkaPointer()) && proto.od2_network.hive.KafkaPointer.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.od2_network.hive.AssignmentReport}
 */
proto.od2_network.hive.AssignmentReport.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.od2_network.hive.AssignmentReport;
  return proto.od2_network.hive.AssignmentReport.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.od2_network.hive.AssignmentReport} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.od2_network.hive.AssignmentReport}
 */
proto.od2_network.hive.AssignmentReport.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.od2_network.hive.KafkaPointer;
      reader.readMessage(value,proto.od2_network.hive.KafkaPointer.deserializeBinaryFromReader);
      msg.setKafkaPointer(value);
      break;
    case 2:
      var value = /** @type {!proto.od2_network.hive.TaskStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.od2_network.hive.AssignmentReport.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.od2_network.hive.AssignmentReport.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.od2_network.hive.AssignmentReport} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.AssignmentReport.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKafkaPointer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.od2_network.hive.KafkaPointer.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional KafkaPointer kafka_pointer = 1;
 * @return {?proto.od2_network.hive.KafkaPointer}
 */
proto.od2_network.hive.AssignmentReport.prototype.getKafkaPointer = function() {
  return /** @type{?proto.od2_network.hive.KafkaPointer} */ (
    jspb.Message.getWrapperField(this, proto.od2_network.hive.KafkaPointer, 1));
};


/**
 * @param {?proto.od2_network.hive.KafkaPointer|undefined} value
 * @return {!proto.od2_network.hive.AssignmentReport} returns this
*/
proto.od2_network.hive.AssignmentReport.prototype.setKafkaPointer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.od2_network.hive.AssignmentReport} returns this
 */
proto.od2_network.hive.AssignmentReport.prototype.clearKafkaPointer = function() {
  return this.setKafkaPointer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.od2_network.hive.AssignmentReport.prototype.hasKafkaPointer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TaskStatus status = 2;
 * @return {!proto.od2_network.hive.TaskStatus}
 */
proto.od2_network.hive.AssignmentReport.prototype.getStatus = function() {
  return /** @type {!proto.od2_network.hive.TaskStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.od2_network.hive.TaskStatus} value
 * @return {!proto.od2_network.hive.AssignmentReport} returns this
 */
proto.od2_network.hive.AssignmentReport.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.od2_network.hive.AssignmentResult.prototype.toObject = function(opt_includeInstance) {
  return proto.od2_network.hive.AssignmentResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.od2_network.hive.AssignmentResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.AssignmentResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    workerId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    report: (f = msg.getReport()) && proto.od2_network.hive.AssignmentReport.toObject(includeInstance, f),
    finishTime: (f = msg.getFinishTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    locator: (f = msg.getLocator()) && proto.od2_network.hive.ItemLocator.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.od2_network.hive.AssignmentResult}
 */
proto.od2_network.hive.AssignmentResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.od2_network.hive.AssignmentResult;
  return proto.od2_network.hive.AssignmentResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.od2_network.hive.AssignmentResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.od2_network.hive.AssignmentResult}
 */
proto.od2_network.hive.AssignmentResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setWorkerId(value);
      break;
    case 2:
      var value = new proto.od2_network.hive.AssignmentReport;
      reader.readMessage(value,proto.od2_network.hive.AssignmentReport.deserializeBinaryFromReader);
      msg.setReport(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setFinishTime(value);
      break;
    case 4:
      var value = new proto.od2_network.hive.ItemLocator;
      reader.readMessage(value,proto.od2_network.hive.ItemLocator.deserializeBinaryFromReader);
      msg.setLocator(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.od2_network.hive.AssignmentResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.od2_network.hive.AssignmentResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.od2_network.hive.AssignmentResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.od2_network.hive.AssignmentResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWorkerId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getReport();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.od2_network.hive.AssignmentReport.serializeBinaryToWriter
    );
  }
  f = message.getFinishTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLocator();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.od2_network.hive.ItemLocator.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 worker_id = 1;
 * @return {number}
 */
proto.od2_network.hive.AssignmentResult.prototype.getWorkerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.od2_network.hive.AssignmentResult} returns this
 */
proto.od2_network.hive.AssignmentResult.prototype.setWorkerId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional AssignmentReport report = 2;
 * @return {?proto.od2_network.hive.AssignmentReport}
 */
proto.od2_network.hive.AssignmentResult.prototype.getReport = function() {
  return /** @type{?proto.od2_network.hive.AssignmentReport} */ (
    jspb.Message.getWrapperField(this, proto.od2_network.hive.AssignmentReport, 2));
};


/**
 * @param {?proto.od2_network.hive.AssignmentReport|undefined} value
 * @return {!proto.od2_network.hive.AssignmentResult} returns this
*/
proto.od2_network.hive.AssignmentResult.prototype.setReport = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.od2_network.hive.AssignmentResult} returns this
 */
proto.od2_network.hive.AssignmentResult.prototype.clearReport = function() {
  return this.setReport(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.od2_network.hive.AssignmentResult.prototype.hasReport = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp finish_time = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.od2_network.hive.AssignmentResult.prototype.getFinishTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.od2_network.hive.AssignmentResult} returns this
*/
proto.od2_network.hive.AssignmentResult.prototype.setFinishTime = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.od2_network.hive.AssignmentResult} returns this
 */
proto.od2_network.hive.AssignmentResult.prototype.clearFinishTime = function() {
  return this.setFinishTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.od2_network.hive.AssignmentResult.prototype.hasFinishTime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ItemLocator locator = 4;
 * @return {?proto.od2_network.hive.ItemLocator}
 */
proto.od2_network.hive.AssignmentResult.prototype.getLocator = function() {
  return /** @type{?proto.od2_network.hive.ItemLocator} */ (
    jspb.Message.getWrapperField(this, proto.od2_network.hive.ItemLocator, 4));
};


/**
 * @param {?proto.od2_network.hive.ItemLocator|undefined} value
 * @return {!proto.od2_network.hive.AssignmentResult} returns this
*/
proto.od2_network.hive.AssignmentResult.prototype.setLocator = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.od2_network.hive.AssignmentResult} returns this
 */
proto.od2_network.hive.AssignmentResult.prototype.clearLocator = function() {
  return this.setLocator(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.od2_network.hive.AssignmentResult.prototype.hasLocator = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * @enum {number}
 */
proto.od2_network.hive.TaskStatus = {
  SUCCESS: 0,
  CLIENT_FAILURE: 1,
  TIMEOUT: 2
};

goog.object.extend(exports, proto.od2_network.hive);
